// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Veterinaria.App.Persistencia;

namespace Veterinaria.App.Persistencia.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20211001201141_Tercera")]
    partial class Tercera
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Veterinaria.App.Dominio.Cita", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AuxiliarID")
                        .HasColumnType("int");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MascotaID")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VeterinariaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AuxiliarID");

                    b.HasIndex("MascotaID");

                    b.HasIndex("VeterinariaID");

                    b.ToTable("citas");
                });

            modelBuilder.Entity("Veterinaria.App.Dominio.Diagnostico", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Anotacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CitaID")
                        .HasColumnType("int");

                    b.Property<string>("Formula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HistoriaClinical")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CitaID");

                    b.ToTable("diagnosticos");
                });

            modelBuilder.Entity("Veterinaria.App.Dominio.Mascota", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DueñoID")
                        .HasColumnType("int");

                    b.Property<string>("Edad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DueñoID");

                    b.ToTable("mascotas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Mascota");
                });

            modelBuilder.Entity("Veterinaria.App.Dominio.Persona", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cedula")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("Veterinaria.App.Dominio.Gato", b =>
                {
                    b.HasBaseType("Veterinaria.App.Dominio.Mascota");

                    b.Property<string>("Comida")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Gato");
                });

            modelBuilder.Entity("Veterinaria.App.Dominio.Perro", b =>
                {
                    b.HasBaseType("Veterinaria.App.Dominio.Mascota");

                    b.Property<string>("Comida")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Perro_Comida");

                    b.HasDiscriminator().HasValue("Perro");
                });

            modelBuilder.Entity("Veterinaria.App.Dominio.Auxiliar", b =>
                {
                    b.HasBaseType("Veterinaria.App.Dominio.Persona");

                    b.Property<string>("Jornada_Laboral")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Auxiliar");
                });

            modelBuilder.Entity("Veterinaria.App.Dominio.Dueño", b =>
                {
                    b.HasBaseType("Veterinaria.App.Dominio.Persona");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Dueño");
                });

            modelBuilder.Entity("Veterinaria.App.Dominio.Veterinario", b =>
                {
                    b.HasBaseType("Veterinaria.App.Dominio.Persona");

                    b.Property<string>("Jornada_Laboral")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Veterinario_Jornada_Laboral");

                    b.Property<string>("Tarjeta_Profesional")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Veterinario");
                });

            modelBuilder.Entity("Veterinaria.App.Dominio.Cita", b =>
                {
                    b.HasOne("Veterinaria.App.Dominio.Auxiliar", "Auxiliar")
                        .WithMany()
                        .HasForeignKey("AuxiliarID");

                    b.HasOne("Veterinaria.App.Dominio.Mascota", "Mascota")
                        .WithMany()
                        .HasForeignKey("MascotaID");

                    b.HasOne("Veterinaria.App.Dominio.Veterinario", "Veterinaria")
                        .WithMany()
                        .HasForeignKey("VeterinariaID");

                    b.Navigation("Auxiliar");

                    b.Navigation("Mascota");

                    b.Navigation("Veterinaria");
                });

            modelBuilder.Entity("Veterinaria.App.Dominio.Diagnostico", b =>
                {
                    b.HasOne("Veterinaria.App.Dominio.Cita", "Cita")
                        .WithMany()
                        .HasForeignKey("CitaID");

                    b.Navigation("Cita");
                });

            modelBuilder.Entity("Veterinaria.App.Dominio.Mascota", b =>
                {
                    b.HasOne("Veterinaria.App.Dominio.Dueño", "Dueño")
                        .WithMany()
                        .HasForeignKey("DueñoID");

                    b.Navigation("Dueño");
                });
#pragma warning restore 612, 618
        }
    }
}
